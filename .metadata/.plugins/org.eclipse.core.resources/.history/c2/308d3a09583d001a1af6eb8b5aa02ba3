import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

public class DFACheckBasic {
	static State currentState;
	
	/*
	 * DFA States as Enumeration
	 */
	public enum State{
		A, B, C, D, E, F, G, H, I, J;
	}
	
	public static void main(String[] args) throws IOException {
		String inputFile = args[0];
		BufferedReader bfReader = new BufferedReader(new FileReader(inputFile));
		try {
			String line;
			while ((line = bfReader.readLine()) != null) {
				// Check if DFA recognizes.
                testLine(line);
			}
			bfReader.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	static void testLine(String line) {
		currentState = State.A;
		char[] cArr = line.toCharArray();
		for(char c : cArr) {
			switch(currentState) {
			case A:
				if(c == 0) {
					currentState = State.B;
					System.out.println("Transitioned to state B.");
				} else if(c == 1){
					currentState = State.C;
					System.out.println("Transitioned to state C.");
				}
				break;
			case B:
				break;
			case C:
				break;
			case D:
				break;
			case E:
				break;
			case F:
				break;
			case G:
				break;
			case H:
				break;
			case I:
				break;
			case J:
				break;
			default:
				System.out.println("Current character has no valid state.");
			}
		}
	}

}
